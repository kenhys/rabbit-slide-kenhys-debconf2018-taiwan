= Rethinking of debian/watch

: subtitle
  Thought experiments about uscan
: author
  Kentaro Hayashi
: content-source
  DebConf18 in Taiwan
: date
  2018-08-03
: allotted-time
  20m
: theme
  .

= Agenda

* Who am I?
* Why I started to play with debian/watch?
* Introduction about debian/watch
* The debian/watch statistics
* Thought experiments about debian/watch
* Conclusion

= Agenda

* ((*Who am I?*))
* Why I started to play with debian/watch?
* Introduction about debian/watch
* The debian/watch statistics
* Thought experiments about debian/watch
* Conclusion

= Who am I?

* Twitter/GitHub
  * @kenhys
* Debian "Monthly" contributer
  * @kenhys-guest
* ((*Trackpoint fan*))

= As a contributor

* Maintainer of some packages
  * groonga (upstream releases monthly updates)
  * fcitx-imlist
  * libhinawa
  * ...and so on.

= Agenda

* Who am I?
* ((*Why I started to play with debian/watch?*))
* Introduction about debian/watch
* The debian/watch statistics
* Thought experiments about debian/watch
* Conclusion

= Why playing with d/watch?

* "Need redirector for osdn.net"
  * https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=899119

= d/watch for fonts-sawarabi-mincho

* Combination with:

  * uversionmangle
  * pagemangle
  * downloadurlmangle

= d/watch for fonts-sawarabi-mincho

  version=4
  opts="uversionmangle=s/-beta/~beta/;s/-rc/~rc/;s/-preview/~preview/, \
  pagemangle=s%<osdn:file url="([^<]*)</osdn:file>%<a href="$1">$1</a>%g, \
  downloadurlmangle=s%projects/sawarabi-fonts/downloads%frs/redir\.php?m=iij&f=sawarabi-fonts%g;s/xz\//xz/" \
  https://osdn.net/projects/sawarabi-fonts/releases/rss \
  https://osdn.net/projects/sawarabi-fonts/downloads/.*/sawarabi-mincho@ANY_VERSION@@ARCHIVE_EXT@/ debian uupdate

* Need to parse RSS!

= uversionmangle?

* uversionmangle=s/-beta/~beta/;s/-rc/~rc/;s/-preview/~preview/
  * -beta (('&#x27a1;')) ~beta
  * -rc (('&#x27a1;')) ~rc
  * -preview (('&#x27a1;')) ~preview

= pagemangle?

* pagemangle=s%<osdn:file url="([^<]*)</osdn:file>%<a href="$1">$1</a>%g,
  * Convert page content
    * <osdn:file url="([^<]*)</osdn:file> (('&#x27a1;')) <a href="$1">$1</a>

= downloadurlmangle?

* downloadurlmangle=s%projects/sawarabi-fonts/downloads%frs/redir\.php?m=iij&f=sawarabi-fonts%g;s/xz\//xz/"

= #899119

  # blockquote
  # title = #899119#5
  Hideki Yamane:\n
  "They sometimes changes download way to reduce download access
  by preventing bot, so debian/watch file is complicated and it 
  annoyed us. Implementing redirector in qa.debian.org would improve
  this situation."

= Motivation

* I'm not familiar with d/watch at all
* For sawarabi fonts, it seems that redirector is the best solution
* But, is there a way to improve such a situation?
  * I'll look into d/watch a bit.

= Agenda

* Who am I?
* Why I started to play with debian/watch?
* ((*Introduction about debian/watch*))
* The debian/watch statistics
* Thought experiments about debian/watch
* Conclusion

= Introduction about debian/watch

* Used to check for newer versions of upstream software
* https://wiki.debian.org/debian/watch is the good start point.
* There are many actual examples.

= The typical examples

* There are 8 use cases.
  * Bitbucket, GitHub, Gitlab(Salsa), GitHub, Google Code, LaunchPad, PyPI, and Sourceforge.

= GitHub example

  version=4
  opts=filenamemangle=s/.+\/v?(\d\S+)\.tar\.gz/<project>-$1\.tar\.gz/ \
    https://github.com/<user>/<project>/tags .*/?(\d{2}\.\d.\d)\.tar\.gz

= Common mistakes

* There are 8 common mistakes. What?
  * (('note: see: https://wiki.debian.org/debian/watch'))

= Common mistakes(1)

* Not escaping dots, which match any character.
* (('wait'))The solution is:

  * Use ((*\.*)) instead of ((*.*)) in the regex.

= Common mistake(2)

* A file extension regex that is not flexible enough.
* (('wait'))The solution is:
  * Use ((*\.(?:zip|tgz|tbz|txz|(?:tar\.(?:gz|bz2|xz)))*))

= Common mistake(3)

* Not anchoring the version group at the right place.
* (('wait'))The solution is:
  * Include something before (\d\S+) like fooproj-((*(\d\S+)*))\.tar\.gz

= Common mistake(4)

* Not starting the version part of the regex with a digit.
* (('wait'))The solution is:
  * Use ((*\d*)) instead of ((*.*))

= Common mistake(5)

* Not being flexible enough in the path to the file.
* (('wait'))The solution is:
  * Use http://example.com/someproject/((*.**))/program-(\d\S+)\.tar\.gz instead of http://example.com/someproject/((*path/to/program/downloads*))/program-(\d\S+)\.tar\.gz

= Common mistake(6)

* Not mangling upstream versions that are alphas, betas or release candidates to make them sort before the final release.

* (('wait'))The solution is:
  * Use uversionmangle like opts=uversionmangle=s/(\d)[_\.\-\+]?((RC|rc|pre|dev|beta|alpha)\d*)$/$1~$2/

= Common mistake(7)

* Not mangling Debian versions to remove the +dfsg.1 or +dfsg1 suffix.
* (('wait'))The solution is:
  * Use dversionmangle like opts=dversionmangle=s/\+(debian|dfsg|ds|deb)(\.?\d+)?$//

= Common mistake(8)

* Not enabling cryptographic signature verification when your upstream signs their releases with OpenPGP.
* (('wait'))The solution is:
  * Support it!

= Impression about d/watch

* There are some pitfalls in d/watch
* It is okay once d/watch is prepared
* If you need to maintain more and more packages... (('&#x1f61e;'))

= Motivation

* After looking into d/watch, I felt that it could be more simplified format.
* But even though I felt it, I couldn't prove the idea.

= Agenda

* Who am I?
* Why I started to play with debian/watch?
* Introduction about debian/watch
* ((*The debian/watch statistics*))
* Thought experiments about debian/watch
* Conclusion

= Why statistics?

* Just the Idea may be fuzzy
* Let's discuss based on the fact
* Do you know current overview?

= Collect d/watch data

* We can use the API!
  * ((<URL:https://sources.debian.org/doc/api/>))
    * API documentation about sources.d.o

= Collect package list

* Access package list API
  * ((<URL:https://sources.debian.org/api/list>))
  * You can use this API collecting ((*source*)) package list

= Collect package info

* Access package info API
  * Get suites information about package
    * ((<URL:https://sources.debian.org/api/src/groonga/>))
  * You can use this API collecting only sid package

= Collect raw url

* Access file info API
  * Get path to raw url
    * ((<URL:https://sources.debian.org/api/src/groonga/latest/debian/watch/>))
    * It returns the result of https://sources.debian.org/api/src/groonga/((*8.0.4-1*))/debian/watch/

= Collect d/watch

* Access file content
  * Get raw content of d/watch
    * ((<URL:https://sources.debian.org//data/main/g/groonga/8.0.4-1/debian/watch>))

= Processing collected data

* Collect source packages in unstable
* Collect d/watch if available
* Analyze and Visualize data

= Processing collected data

TODO: system

= Watch file is used?

  # image
  # relative-height = 100
  # src = images/debian-watch-file-pie-graph.png


= What version?

  # image
  # relative-height = 100
  # src = images/debian-watch-version-pie-graph.png

= Popular hosting?

  # image
  # relative-height = 100
  # src = images/debian-watch-hosting-top5-pie-graph.png

= Most of them ...

  # image
  # relative-height = 100
  # src = images/debian-watch-hosting-top5all-pie-graph.png

= How about salsa.d.o?


= Frequently used opts?

TODO: graph

= Thought experiments d/watch

* Simplify d/watch
* Cover most cases, not all

= Required information for d/watch?

* Hosting
* Owner
* Project

= The new rule

  # d/watch
  version=5
  type=github,owner=kenhys,project=fcitx-imlist

* https://github.com/kenhys/fcitx-imlist

= Experiments

* Is new rule practical enough?
* Lets's do experiment!

= Steps to verify

* Modify uscan which supports new rule
* Download source package
* Revert previous release to ready for uscan
* Uscan with current and modified one
* Compare dehs result

= Conclusion

* d/watch is well documented but a bit redundant
* d/watch can be simplified by new d/watch rules
* d/watch thought experiments works well to improve such a situation
* What do you think?
